services:
  nginx-mirror:
    image: nginx
    volumes:
      - "./conf/mirror/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "80"

  # create a dedicated db for the mirror
  swh-mirror-storage-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-mirror-storage
      POSTGRES_PASSWORD: testpassword

  # and an RPC server
  swh-mirror-storage:
    image: swh/stack
    build: ./
    depends_on:
      - swh-mirror-storage-db
      - swh-mirror-objstorage
      - prometheus-statsd-exporter
      - nginx-mirror
    env_file:
      - ./env/common_python.env
    environment:
      DB_FLAVOR: mirror
      POSTGRES_DB: swh-mirror-storage
      STORAGE_BACKEND: postgresql
      RPC_PORT: 5002
    command: rpc
    healthcheck:
      test: curl -f http://localhost:5002 || exit 1
      retries: 6
    volumes:
      - "./conf/mirror/storage.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-storage/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  # Object storage
  swh-mirror-objstorage:
    build: ./
    image: swh/stack
    env_file:
      - ./env/common_python.env
    depends_on:
      - prometheus-statsd-exporter
    environment:
      RPC_PORT: 5003
    command: rpc
    healthcheck:
      test: curl -f http://localhost:5003 || exit 1
      retries: 6
    volumes:
      - "./conf/objstorage.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-objstorage/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"
      - /srv/softwareheritage/objects

  # a dedicated swh-web db
  swh-mirror-web-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-mirror-web
      POSTGRES_PASSWORD: testpassword
    volumes:
      - "./services/initdb.d:/docker-entrypoint-initdb.d"

  # a dedicated swh-web
  swh-mirror-web:
    build: ./
    image: swh/stack
    depends_on:
      - swh-mirror-storage
      - swh-mirror-web-db
      - prometheus-statsd-exporter
      - nginx-mirror
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-mirror-web
      VERBOSITY: 3
      DJANGO_SETTINGS_MODULE: swh.web.settings.production
    healthcheck:
      test: curl -f http://localhost:5004 || exit 1
      retries: 6
    volumes:
      - "./conf/mirror/web.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-web/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"
      - "./assets/mirror/:/mirror/:ro"

  # and the background processes that keeps the mirror in sync with the
  # main graph
  swh-mirror-storage-replayer:
    image: swh/stack
    build: ./
    depends_on:
      - kafka
      - swh-mirror-storage
      - prometheus-statsd-exporter
      - nginx-mirror
    env_file:
      - ./env/common_python.env
    environment:
      LOG_LEVEL: DEBUG
    command: replayer
    volumes:
      - "./conf/mirror/replayer.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-storage/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"
    deploy:
       mode: replicated
       replicas: 2

  swh-mirror-objstorage-replayer:
    image: swh/stack
    build: ./
    depends_on:
      - kafka
      - prometheus-statsd-exporter
      - swh-objstorage
      - swh-mirror-objstorage
      - nginx
      - nginx-mirror
    env_file:
      - ./env/common_python.env
    environment:
      LOG_LEVEL: DEBUG
    command: replayer
    volumes:
      - "./conf/mirror/content-replayer.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-objstorage/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"
    deploy:
       mode: replicated
       replicas: 4

  # and a vault full-stack
  swh-mirror-vault-db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: swh-mirror-vault
    volumes:
      - "./services/initdb.d:/docker-entrypoint-initdb.d"

  swh-mirror-vault:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-mirror-vault
      RPC_PORT: 5005
    command: rpc
    healthcheck:
      test: curl -f http://localhost:5005 || exit 1
      retries: 6
    depends_on:
      - swh-mirror-vault-db
      - swh-mirror-objstorage
      - swh-mirror-storage
      - swh-mirror-scheduler
      - prometheus-statsd-exporter
      - nginx-mirror
    volumes:
      - "./conf/mirror/vault.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-vault/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-mirror-vault-worker:
    image: swh/stack
    build: ./
    command: worker
    env_file:
      - ./env/common_python.env
      - ./env/workers.env
    environment:
      SWH_SCHEDULER_HOST: swh-mirror-scheduler
      SWH_SCHEDULER_INSTANCE: http://nginx-mirror/rpc/scheduler
    depends_on:
      - swh-mirror-vault
      - swh-mirror-storage
      - prometheus-statsd-exporter
      - nginx-mirror
    volumes:
      - "./conf/mirror/vault-worker.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-vault/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-mirror-scheduler-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-mirror-scheduler
      POSTGRES_PASSWORD: testpassword
    volumes:
      - "./services/initdb.d:/docker-entrypoint-initdb.d"

  swh-mirror-scheduler:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-mirror-scheduler
      # this is required because currently the 'swh scheduler' does not honor
      # the SWH_CONFIG_FILENAME env var...
      SWH_SCHEDULER_CONFIG_FILE: /srv/softwareheritage/config.yml
      RPC_PORT: 5008
      BROKER_URL: amqp://amqp-mirror/
    command: rpc
    healthcheck:
      test: curl -f http://localhost:5008 || exit 1
      retries: 6
    depends_on:
      - swh-mirror-scheduler-db
      - amqp-mirror
      - prometheus-statsd-exporter
    volumes:
      - "./conf/mirror/scheduler.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-scheduler/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-mirror-scheduler-listener:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-mirror-scheduler
      SWH_SCHEDULER_CONFIG_FILE: /srv/softwareheritage/config.yml
      BROKER_URL: amqp://amqp-mirror/
      WORKER_INSTANCES: vault
      APP: swh.scheduler.celery_backend.config.app
    command: worker start-listener
    depends_on:
      - swh-mirror-scheduler
      - amqp-mirror
      - prometheus-statsd-exporter
    volumes:
      - "./conf/mirror/scheduler.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-scheduler/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-mirror-scheduler-runner:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-mirror-scheduler
      SWH_SCHEDULER_CONFIG_FILE: /srv/softwareheritage/config.yml
      BROKER_URL: amqp://amqp-mirror/
      WORKER_INSTANCES: vault
      APP: swh.scheduler.celery_backend.config.app
    command: worker start-runner --period 10
    depends_on:
      - swh-mirror-scheduler
      - amqp-mirror
      - prometheus-statsd-exporter
    volumes:
      - "./conf/mirror/scheduler.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-scheduler/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  amqp-mirror:
    image: rabbitmq:3.13-management
