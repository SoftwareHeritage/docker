services:
  nginx-replica:
    image: nginx
    volumes:
      - "./conf/replica/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "80"

  swh-replica-storage-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-replica-storage
      POSTGRES_PASSWORD: testpassword

  swh-replica-storage:
    image: swh/stack
    build: ./
    depends_on:
      - swh-storage-db
      - swh-replica-storage-db
      - swh-objstorage
      - prometheus-statsd-exporter
      - nginx
    env_file:
      - ./env/common_python.env
      - ./env/storage-replica.env
    environment:
      STORAGE_BACKEND: postgresql
      DB_FLAVOR: read_replica
      RPC_PORT: 5002
    command: rpc
    volumes:
      - "./conf/replica/storage.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-storage/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  # override storage db to enable wal_level=logical
  swh-storage-db:
    command: postgres -c wal_level=logical

  # a dedicated swh-web db
  swh-replica-web-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-replica-web
      POSTGRES_PASSWORD: testpassword
    volumes:
      - "./services/initdb.d:/docker-entrypoint-initdb.d"

  # a dedicated swh-web
  swh-replica-web:
    build: ./
    image: swh/stack
    depends_on:
      - swh-replica-storage
      - swh-replica-web-db
      - prometheus-statsd-exporter
      - nginx-replica
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-replica-web
      VERBOSITY: 3
      DJANGO_SETTINGS_MODULE: swh.web.settings.production
    volumes:
      - "./conf/replica/web.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-web/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"
      - "./assets/replica/:/replica/:ro"

  swh-replica-vault-db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: swh-replica-vault
    volumes:
      - "./services/initdb.d:/docker-entrypoint-initdb.d"

  swh-replica-vault:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-replica-vault
      RPC_PORT: 5005
    command: rpc
    depends_on:
      - swh-replica-vault-db
      - swh-objstorage
      - swh-replica-storage
      - swh-replica-scheduler
      - prometheus-statsd-exporter
      - nginx
      - nginx-replica
    volumes:
      - "./conf/replica/vault.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-vault/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-replica-vault-worker:
    image: swh/stack
    build: ./
    command: worker
    env_file:
      - ./env/common_python.env
      - ./env/workers.env
    environment:
      SWH_SCHEDULER_HOST: swh-replica-scheduler
      SWH_SCHEDULER_INSTANCE: http://nginx-replica/rpc/scheduler
    depends_on:
      - swh-replica-vault
      - swh-replica-storage
      - prometheus-statsd-exporter
      - nginx-replica
    volumes:
      - "./conf/replica/vault-worker.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-vault/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-replica-scheduler-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-replica-scheduler
      POSTGRES_PASSWORD: testpassword
    volumes:
      - "./services/initdb.d:/docker-entrypoint-initdb.d"

  swh-replica-scheduler:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-replica-scheduler
      # this is required because currently the 'swh scheduler' does not honor
      # the SWH_CONFIG_FILENAME env var...
      SWH_SCHEDULER_CONFIG_FILE: /srv/softwareheritage/config.yml
      RPC_PORT: 5008
      BROKER_URL: amqp://amqp-replica/
    command: rpc
    depends_on:
      - swh-replica-scheduler-db
      - amqp-replica
      - prometheus-statsd-exporter
    volumes:
      - "./conf/replica/scheduler.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-scheduler/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-replica-scheduler-listener:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-replica-scheduler
      SWH_LOG_LEVELS: info
      SWH_SCHEDULER_CONFIG_FILE: /srv/softwareheritage/config.yml
      BROKER_URL: amqp://amqp-replica/
      WORKER_INSTANCES: vault
      APP: swh.scheduler.celery_backend.config.app
    command: worker start-listener
    depends_on:
      - swh-replica-scheduler
      - amqp-replica
      - prometheus-statsd-exporter
    volumes:
      - "./conf/replica/scheduler.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-scheduler/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  swh-replica-scheduler-runner:
    image: swh/stack
    build: ./
    env_file:
      - ./env/common_python.env
    environment:
      POSTGRES_DB: swh-replica-scheduler
      SWH_LOG_LEVELS: info
      SWH_SCHEDULER_CONFIG_FILE: /srv/softwareheritage/config.yml
      BROKER_URL: amqp://amqp-replica/
      WORKER_INSTANCES: vault
      APP: swh.scheduler.celery_backend.config.app
    command: worker start-runner --period 10
    depends_on:
      - swh-replica-scheduler
      - amqp-replica
      - prometheus-statsd-exporter
    volumes:
      - "./conf/replica/scheduler.yml:/srv/softwareheritage/config.yml:ro"
      - "./services/swh-scheduler/entrypoint.sh:/srv/softwareheritage/entrypoint.sh:ro"

  amqp-replica:
    image: rabbitmq:3.13-management
